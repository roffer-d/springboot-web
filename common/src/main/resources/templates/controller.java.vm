package ${package.Controller};

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.roffer.common.http.R;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.apache.commons.lang3.StringUtils;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import java.util.Arrays;
import java.util.List;

@RestController
@RequestMapping("/${table.entityPath}")
#if(${table.comment})
/**
 * @description ${table.comment}
 * @author roffer
 * @date ${date}
 */
#else
/**
 * @description ${entity}
 * @author roffer
 * @date ${date}
 */
#end
#if(${table.comment})
@Api("${table.comment}相关")
#else
@Api("${entity}相关")
#end
public class ${entity}Controller {
    @Resource
    private ${table.serviceName} ${table.entityPath}Service;

    #if(${table.comment})
    @ApiOperation(value = "根据Id获取${table.comment}")
    #else
    @ApiOperation(value = "根据Id获取${entity}")
    #end
    @PostMapping("/getById")
    public Object getById(@RequestParam String id) {
        ${entity} ${table.entityPath} = ${table.entityPath}Service.getById(id);
        return R.ok().data("${table.entityPath}", ${table.entityPath});
    }

    #if(${table.comment})
    @ApiOperation(value = "获取全部${table.comment}")
    #else
    @ApiOperation(value = "获取全部${entity}")
    #end
    @PostMapping("/list")
    public Object list() {
        QueryWrapper<${entity}> queryWrapper = new QueryWrapper();
    #if($!{field.fill.equals("INSERT")})
        queryWrapper.orderByDesc("${field.name}")
    #end
    #if($!{field.fill.equals("INSERT_UPDATE")})
        queryWrapper.orderByDesc("${field.name}")
    #end
        return R.ok().data("list", ${table.entityPath}Service.list(queryWrapper));
    }

    #if(${table.comment})
    @ApiOperation(value = "分页${table.comment}")
    #else
    @ApiOperation(value = "分页${entity}")
    #end
    @PostMapping("/listPage")
    public Object listPage(
        #foreach($field in ${table.fields})
            #if(${field.propertyName.equals("id")} || $!{field.fill.equals("INSERT")} || $!{field.fill.equals("INSERT_UPDATE")} || !${field.propertyType.equals("String")})
            #else
            @RequestParam(required = false) ${field.propertyType} ${field.propertyName},
            #end
        #end
            @RequestParam(required = false) Long pageNum,
            @RequestParam(required = false) Long pageSize) {

        Page<${entity}> ${table.entityPath}Page = null;
        if(null == pageNum && null == pageSize){
            ${table.entityPath}Page = new Page<>();
        }else{
            ${table.entityPath}Page = new Page<>(pageNum, pageSize);
        }

        QueryWrapper<${entity}> queryWrapper = new QueryWrapper();
    #foreach($field in ${table.fields})
        #if(${field.propertyName.equals("id")} || $!{field.fill.equals("INSERT")} || $!{field.fill.equals("INSERT_UPDATE")} || !${field.propertyType.equals("String")})
        #else
        if (StringUtils.isNotBlank(${field.propertyName})) {
            queryWrapper.like("${field.propertyName}", ${field.propertyName});
        }
        #end
    #end

        #if($!{field.fill.equals("INSERT")})
        queryWrapper.orderByDesc("${field.name}")
        #end
        #if($!{field.fill.equals("INSERT_UPDATE")})
        queryWrapper.orderByDesc("${field.name}")
        #end

        ${table.entityPath}Service.page(${table.entityPath}Page,queryWrapper);

        long total = ${table.entityPath}Page.getTotal();
        List<${entity}> ${table.entityPath}List = ${table.entityPath}Page.getRecords();

        return R.ok().data("total", total).data("list", ${table.entityPath}List);
    }

    #if(${table.comment})
    @ApiOperation(value = "添加${table.comment}")
    #else
    @ApiOperation(value = "添加${entity}")
    #end
    @PostMapping("/save")
    public Object save(${entity} ${table.entityPath}) {
        ${table.entityPath}Service.save(${table.entityPath});
        return R.ok();
    }

    #if(${table.comment})
    @ApiOperation(value = "更新${table.comment}")
    #else
    @ApiOperation(value = "更新${entity}")
    #end
    @PostMapping("/update")
    public Object update(${entity} ${table.entityPath}) {
        ${table.entityPath}Service.updateById(${table.entityPath});
        return R.ok();
    }

    #if(${table.comment})
    @ApiOperation(value = "删除${table.comment}")
    #else
    @ApiOperation(value = "删除${entity}")
    #end
    @PostMapping("/delete")
    public Object delete(String id) {
        ${table.entityPath}Service.removeById(id);
        return R.ok();
    }

    #if(${table.comment})
    @ApiOperation(value = "批量删除${table.comment}")
    #else
    @ApiOperation(value = "批量删除${entity}")
    #end
    @PostMapping("/deleteByIds")
    public Object deleteByIds(@RequestParam String ids) {
        ${table.entityPath}Service.removeByIds(Arrays.asList(ids.split(",")));
        return R.ok();
    }
}
